{"version":3,"sources":["components/formCrud.js","components/Modal/Modal.js","reducers/commentsReducer.js","common/constants.js","components/Modal/ModalContainer.js","components/Modal/EditModal/EditModal.js","actions/commentActions.js","components/Modal/EditModal/EditModalContainer.js","components/ImplementForm/ImplementForm.js","components/ImplementForm/ImplementFormContainer.js","components/CommentsList.js","components/CommentsListContainer.js","components/Header/Header.js","components/Footer/Footer.js","components/Header/HeaderContainer.js","App.js","serviceWorker.js","reducers/combineReducers.js","index.js","utils/store.js","components/Header/Header.module.css","components/Footer/Footer.module.css","components/CommentsList.module.css"],"names":["FieldInput","input","type","placeholder","as","Form","Control","value","onChange","CrudForm","props","onSubmit","handleSubmit","Row","Group","Col","controlId","Field","name","component","rows","className","id","defaultChecked","htmlFor","Button","variant","style","marginRight","CrudReduxForm","reduxForm","form","Modal","this","commentsPage","isOpen","content","console","log","React","Component","initState","comments","setCommentsAC","connect","state","dispatch","EditModal","newRef","createRef","updateNewInputText","newText","text","updateData","data","updateComment","then","response","undefined","errors","getCommentsList","setComments","changeText","bind","closeModal","setState","current","editComment","text1","close","ref","cols","onClick","save","addComment","formData","a","axios","post","get","deleteComment","delete","getCommentById","patch","editCommentAC","ImplementForm","newRef1","newRef2","event","currentTarget","authorName","checked","parentId","preventDefault","stopPropagation","Check","label","CommentsList","delData","deletedCount","filter","x","_id","openForm","isClose","isForm","edit","openModal","EditModalContainer","length","ModalContainer","classes","wrapBlock","map","comment","container","key","wrapper","statePositive","stateNegative","header","itemName","itemTime","creationTime","body","btnWrap","btnEdit","btnDelete","ImplementFormContainer","clear","containerNew","commentNew","wrapperNew","openModalAC","Header","counterPositive","counterNegative","forEach","item","Navbar","bg","Brand","href","wrap","alt","src","width","height","itemRight","itemWrap","itemStat","FooterPage","fluid","md","title","wrapList","Date","getFullYear","App","HeaderContainer","CommentsListContainer","Footer","Boolean","window","location","hostname","match","combineReducers","formReducer","action","Object","assign","index","findIndex","ReactDOM","render","store","createStore","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.ab80b23a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\n\r\nconst FieldInput = ({ input, type, placeholder, as }) => {\r\n    return (\r\n        <Form.Control\r\n            type={type}\r\n            placeholder={placeholder}\r\n            value={input.value}\r\n            as={as}\r\n            onChange={input.onChange} />\r\n    )\r\n};\r\n\r\nconst CrudForm = (props) => {\r\n    return (\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Field\r\n                        name=\"authorName\"\r\n                        component={FieldInput}\r\n                        type=\"text\"\r\n                        placeholder=\"Author name\"\r\n\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Field\r\n                        name=\"text\"\r\n                        component={FieldInput}\r\n                        as=\"textarea\" rows=\"3\"\r\n                        placeholder=\"Comment text\"\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n                <div className='custom-control custom-switch'>\r\n                    <Field\r\n                        name=\"state\"\r\n                        component='input'\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='customSwitchesChecked'\r\n                        defaultChecked={false}\r\n                    />\r\n                    <label className='custom-control-label' htmlFor='customSwitchesChecked'>\r\n                        Negative / Positive\r\n                    </label>\r\n                </div>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\" style={{marginRight: '40px'}}>\r\n                    Submit+\r\n                </Button>\r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport const CrudReduxForm = reduxForm({\r\n    form: 'crud'\r\n})(CrudForm);\r\n\r\nexport const CommentsReduxForm = reduxForm({\r\n    form: 'comments'\r\n})(CrudForm);","import React from \"react\";\r\nimport './style.css'\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { isOpen, content } = this.props.commentsPage;\r\n\r\n        if(!isOpen) return null;\r\n\r\n        console.log(this.props);\r\n\r\n\r\n        return (\r\n            <div className=\"modal\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Edit comment</h5>\r\n                            <button type=\"button\" className=\"close\">\r\n                                <span>&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import {CLOSE_MODAL, EDIT_COMMENTS, OPEN_MODAL, SET_COMMENTS} from \"../common/constants\";\r\n\r\nconst initState = {\r\n    comments: [],\r\n    isOpen: false,\r\n    content: null\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type) {\r\n        case SET_COMMENTS: {\r\n            return {...state, comments: action.comments}\r\n        }\r\n        case OPEN_MODAL:\r\n            return Object.assign({}, state, {\r\n                isOpen: true,\r\n                content: action.content\r\n            });\r\n        case CLOSE_MODAL:\r\n            return Object.assign({}, state, {\r\n                isOpen: false\r\n            });\r\n        case EDIT_COMMENTS:\r\n            const index = state.comments.findIndex(item => {\r\n                console.log('INDEX', item._id, action);\r\n                return (item._id === action.id);\r\n            });\r\n            console.log('index', index);\r\n            state.comments[index].text = action.text;\r\n            return Object.assign({}, state, {\r\n                comments: state.comments\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCommentsAC = (comments) => ({type: SET_COMMENTS, comments});\r\nexport const openModalAC = (content) => ({type: OPEN_MODAL, content});\r\nexport const closeModalAC = () => ({type: CLOSE_MODAL});\r\nexport const editCommentAC = (id, text) => ({type: EDIT_COMMENTS, id, text});\r\n","export const SET_COMMENTS = 'SET_COMMENTS';\r\nexport const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\nexport const EDIT_COMMENTS = 'EDIT_COMMENTS';\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Modal from \"./Modal\";\r\nimport {closeModalAC, openModalAC} from \"../../reducers/commentsReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        commentsPage: state.commentsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);","import React from \"react\";\r\n\r\nclass EditModal extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props);\r\n        console.log(props.id)\r\n\r\n        this.state = {\r\n            id: this.props.id,\r\n            text: this.props.text\r\n        };\r\n\r\n        this.changeText = this.changeText.bind(this);\r\n    }\r\n\r\n    close() {\r\n        this.props.closeModal();\r\n    }\r\n\r\n    newRef = React.createRef();\r\n\r\n    updateNewInputText = (newText) => {\r\n        this.state.text = newText;\r\n    };\r\n\r\n    changeText() {\r\n        this.setState({\r\n            text: this.newRef.current.value\r\n        });\r\n    }\r\n\r\n\r\n    updateData = (id, data) => {\r\n        this.props.updateComment(id, data).then((response) => {\r\n            console.log(response);\r\n            if (response.errors === undefined) {\r\n                this.props.getCommentsList().then((response) => {\r\n                    this.props.setComments(response.data);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    save() {\r\n        console.log('SAVE');\r\n        console.log(this.props.id);\r\n        const {id, text} = this.state;\r\n        this.props.editComment(id, text);\r\n        const text1 = this.newRef.current.value;\r\n        console.log('RREEFF', text1);\r\n        this.updateData(this.props.id, {text: text1});\r\n        this.close();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"modal-body\">\r\n                    {console.log(this.props)}\r\n                    <textarea ref={this.newRef} onChange={this.changeText} value={this.state.text} cols=\"40\"/>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.save()}>Save changes</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.close()}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditModal;","import axios from 'axios';\r\n\r\nexport const addComment = async (formData) => {\r\n    return await axios.post('https://guarded-mountain-57996.herokuapp.com/comments', formData);\r\n};\r\n\r\nexport const getCommentsList = async () => {\r\n    return await axios.get('https://guarded-mountain-57996.herokuapp.com/comments/');\r\n};\r\n\r\nexport const deleteComment = async (id) => {\r\n    return await axios.delete(`https://guarded-mountain-57996.herokuapp.com/comments/${id}`);\r\n};\r\n\r\nexport const getCommentById = async (id) => {\r\n    return await axios.get(`https://guarded-mountain-57996.herokuapp.com/comments/${id}`);\r\n};\r\n\r\nexport const updateComment = async (id, data) => {\r\n    return await axios.patch(`https://guarded-mountain-57996.herokuapp.com/comments/${id}`, data);\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport EditModal from \"./EditModal\";\r\nimport {closeModalAC, editCommentAC, setCommentsAC} from \"../../../reducers/commentsReducer\";\r\nimport {getCommentsList, updateComment} from \"../../../actions/commentActions\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        comments: state.commentsPage.comments,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closeModal: () => {\r\n            dispatch(closeModalAC());\r\n        },\r\n        editComment: (id, text) => {\r\n            dispatch(editCommentAC(id, text));\r\n        },\r\n        updateComment: updateComment,\r\n        setComments: (comments) => {\r\n            dispatch(setCommentsAC(comments));\r\n        },\r\n        getCommentsList: getCommentsList\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal);","import React from 'react';\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\n\r\nconst ImplementForm = (props) => {\r\n\r\n\r\n\r\n    const newRef = React.createRef();\r\n    const newRef1 = React.createRef();\r\n    const newRef2 = React.createRef();\r\n\r\n    const handleSubmit = event => {\r\n        const form = event.currentTarget;\r\n        console.log(event);\r\n        console.log(form);\r\n        const formData = {\r\n            authorName: newRef.current.value,\r\n            text: newRef1.current.value,\r\n            state: newRef2.current.checked,\r\n            parentId: props.parentId\r\n        };\r\n        console.log(formData);\r\n        props.addComment(formData).then((response) => {\r\n            console.log(response.data);\r\n            if (response.errors === undefined) {\r\n                props.getCommentsList().then((response) => {\r\n                    props.setComments(response.data);\r\n                });\r\n            } else {\r\n\r\n            }\r\n        });\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Row>\r\n                    <Col>\r\n                        <Form.Control as=\"input\" placeholder=\"Author name\" ref={newRef}/>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"text\" ref={newRef1}/>\r\n            </Form.Group>\r\n            <Form.Check\r\n                type=\"switch\"\r\n                id=\"custom-switch\"\r\n                label=\"Negative / Positive\"\r\n                ref={newRef2}\r\n            />\r\n\r\n            <Button type=\"submit\">Reply</Button>\r\n        </Form>\r\n\r\n    )\r\n};\r\n\r\nexport default ImplementForm;\r\n","import { connect } from \"react-redux\";\r\nimport ImplementForm from \"./ImplementForm\";\r\nimport {addComment, getCommentsList} from \"../../actions/commentActions\";\r\nimport {setCommentsAC} from \"../../reducers/commentsReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        comments: state.commentsPage.comments,\r\n    }\r\n};\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setComments: (comments) => {\r\n            dispatch(setCommentsAC(comments));\r\n        },\r\n        getCommentsList: getCommentsList,\r\n        addComment: addComment,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImplementForm);","import React from \"react\";\r\nimport {CommentsReduxForm, CrudReduxForm} from \"./formCrud\";\r\nimport classes from './CommentsList.module.css';\r\nimport ModalContainer from \"./Modal/ModalContainer\";\r\nimport EditModalContainer from \"./Modal/EditModal/EditModalContainer\";\r\nimport ImplementFormContainer from \"./ImplementForm/ImplementFormContainer\";\r\n\r\nclass CommentsList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isForm: null,\r\n            isClose: true\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.comments.length === 0) {\r\n            this.props.getCommentsList().then((response) => {\r\n                this.props.setComments(response.data);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    delData = (id) => {\r\n        this.props.deleteComment(id).then((response) => {\r\n            if (response.data.deletedCount > 0) {\r\n                // remove this comment from reducer\r\n                this.props.setComments(this.props.comments.filter(x => (x._id != id)));\r\n            } else {\r\n                // print error (cannot remove)\r\n            }\r\n        });\r\n    };\r\n\r\n    onSubmit = (formData) => {\r\n\r\n        if (formData.state === undefined) {\r\n            formData.state = false;\r\n        }\r\n        console.log(formData);\r\n        this.props.addComment(formData).then((response) => {\r\n            if (response.errors === undefined) {\r\n                this.props.getCommentsList().then((response) => {\r\n                    this.props.setComments(response.data);\r\n                });\r\n            } else {\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    openForm = (id) => {\r\n        if (this.state.isClose) {\r\n            this.setState({\r\n                isForm: id,\r\n                isClose: false\r\n            });\r\n        }\r\n        if (this.state.isClose === false) {\r\n            this.setState({\r\n                isForm: null,\r\n                isClose: true\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    edit = (id, text) => {\r\n        this.props.openModal(<EditModalContainer id={id} text={text}/>);\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>Create new record</h1>\r\n                    <ModalContainer/>\r\n                    <CrudReduxForm onSubmit={this.onSubmit}/>\r\n                </div>\r\n                <div className={classes.wrapBlock}>\r\n                    {this.props.comments.map(comment => comment.parentId === null ?\r\n                        <div className={classes.container} key={comment._id}>\r\n                            <div\r\n                                className={`${classes.wrapper} ${comment.state == true ? classes.statePositive : classes.stateNegative}`}>\r\n                                <div className={classes.header}>\r\n                                    <div>\r\n                                <span className={classes.itemName}>\r\n                                    {comment.authorName}\r\n                                </span>\r\n                                    </div>\r\n                                    <div>\r\n                                    <span className={classes.itemTime}>\r\n                                        posted: {comment.creationTime}\r\n                                    </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.body}>\r\n                                    <div>\r\n                                    <span>\r\n                                        {comment.text}\r\n                                    </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.btnWrap}>\r\n                                    <div>\r\n                                        <button className={classes.btnEdit} onClick={() => {\r\n                                            this.edit(comment._id, comment.text)\r\n                                        }}>EDIT\r\n                                        </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button className={classes.btnDelete}\r\n                                                onClick={() => this.delData(comment._id)}>DELETE\r\n                                        </button>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button className={classes.btnEdit}\r\n                                                onClick={() => this.openForm(comment._id)}>add comment\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.isForm === comment._id ?\r\n                                <div>\r\n                                    <ImplementFormContainer parentId={comment._id}/>\r\n                                </div> : null}\r\n                            <div className={classes.clear}></div>\r\n                            <div className={classes.containerNew}>\r\n                                {this.props.comments.map(commentNew => (commentNew.parentId === comment._id) ?\r\n                                    <div key={commentNew._id}>\r\n                                        <div\r\n                                            className={`${classes.wrapperNew} ${commentNew.state == true ? classes.statePositive : classes.stateNegative}`}>\r\n                                            <div className={classes.header}>\r\n                                                <div>\r\n                                <span className={classes.itemName}>\r\n                                    {commentNew.authorName}\r\n                                </span>\r\n                                                </div>\r\n                                                <div>\r\n                                    <span className={classes.itemTime}>\r\n                                        posted: {commentNew.creationTime}\r\n                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={classes.body}>\r\n                                                <div>\r\n                                    <span>\r\n                                        {commentNew.text}\r\n                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={classes.btnWrap}>\r\n                                                <div>\r\n                                                    <button className={classes.btnEdit} onClick={() => {\r\n                                                        this.edit(commentNew._id, commentNew.text)\r\n                                                    }}>EDIT\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <button className={classes.btnDelete}\r\n                                                            onClick={() => this.delData(commentNew._id)}>DELETE\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null\r\n                                )}\r\n                            </div>\r\n                        </div> : null\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default CommentsList;","import { connect } from \"react-redux\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport {editCommentAC, openModalAC, setCommentsAC} from \"../reducers/commentsReducer\";\r\nimport { getCommentsList, deleteComment, getCommentById, addComment } from \"../actions/commentActions\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        comments: state.commentsPage.comments,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setComments: (comments) => {\r\n            dispatch(setCommentsAC(comments));\r\n        },\r\n        getCommentsList: getCommentsList,\r\n        deleteComment: deleteComment,\r\n        getCommentById: getCommentById,\r\n        addComment: addComment,\r\n        openModal: (content) => {\r\n            dispatch(openModalAC(content));\r\n        },\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsList);","import React from \"react\";\r\nimport {Navbar} from \"react-bootstrap\";\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    let counterPositive = 0;\r\n    let counterNegative = 0;\r\n\r\n    props.comments.forEach(function (item) {\r\n        if(item.state === true && item.parentId === null) {\r\n            counterPositive++;\r\n        }\r\n        else if(item.state === false && item.parentId === null) counterNegative++;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.container}>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">\r\n                    <div className={classes.wrap}>\r\n                    <div>\r\n                    <img\r\n                        alt=\"some people\"\r\n                        src=\"https://webstockreview.net/images/collaboration-clipart-discussion-3.png\"\r\n                        width=\"80\"\r\n                        height=\"55\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />{' '}\r\n                    </div>\r\n                    <div className={classes.itemRight}>\r\n                   <span>Discussion page</span>\r\n                    </div>\r\n                        <div className={classes.itemWrap}>\r\n                            <div>\r\n                                <span>Comment's statistic:</span>\r\n                            </div>\r\n                            <div className={classes.itemStat}>\r\n                                <span>Negative comments: {counterNegative}</span>\r\n                                <span>Positive comments: {counterPositive}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Navbar.Brand>\r\n            </Navbar>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport classes from './Footer.module.css';\r\n\r\nconst FooterPage = () => {\r\n    return (\r\n\r\n        <MDBFooter className=\"font-small pt-4 mt-4\">\r\n            <div className={classes.wrap}>\r\n            <MDBContainer fluid className=\"text-center text-md-left\">\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\">\r\n                        <h5 className=\"title\">Short information about this page</h5>\r\n                        <p>\r\n                            A small discussion page. The client part was developed with React Js and Redux to manage the state of the application. The server part was developed with Node Js(Express Js). MongoDB is used as the database management system.\r\n                        </p>\r\n                    </MDBCol>\r\n                    <MDBCol md=\"6\">\r\n                        <h5 className={classes.title}>Links</h5>\r\n                        <ul className={classes.wrapList}>\r\n                            <li className=\"list-unstyled\">\r\n                                <a href=\"https://www.facebook.com/andrey.komar.54\">Facebook</a>\r\n                            </li>\r\n                            <li className=\"list-unstyled\">\r\n                                <a href=\"https://www.instagram.com/_andrey.komar/?hl=ru\">Instagram</a>\r\n                            </li>\r\n                            <li className=\"list-unstyled\">\r\n                                <a href=\"https://t.me/andrewkomar\">Telegram</a>\r\n                            </li>\r\n                            <li className=\"list-unstyled\">\r\n                                <a href=\"#!\">E-mail: tornhill1997@gmail.com</a>\r\n                            </li>\r\n                        </ul>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n            </div>\r\n            <div className=\"footer-copyright text-center py-3\">\r\n                <MDBContainer fluid>\r\n                    &copy; {new Date().getFullYear()} Developed by: <a href=\"https://www.facebook.com/andrey.komar.54\"> Andrew Komar </a>\r\n                </MDBContainer>\r\n            </div>\r\n        </MDBFooter>\r\n    );\r\n}\r\n\r\nexport default FooterPage;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        comments: state.commentsPage.comments,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\nimport './App.css';\r\nimport { Route } from \"react-router-dom\";\r\nimport CommentsListContainer from \"./components/CommentsListContainer\";\r\nimport Header from \"./components/Header/Header\";\r\nimport FooterPage from \"./components/Footer/Footer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n\r\nclass App extends React.Component {\r\n\r\n    // state = {comments: []};\r\n    //\r\n    // componentDidMount() {\r\n    //     fetch('/comments')\r\n    //         .then(res => res.json())\r\n    //         .then(comments => this.setState({ comments }))\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <HeaderContainer/>\r\n                <div className=\"container\">\r\n                    <CommentsListContainer/>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n                {/*{*/}\r\n                {/*    this.state.comments.map(comment => <li key={comment.id}>{comment.username}</li>)*/}\r\n                {/*}*/}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport commentsReducer from \"./commentsReducer\";\r\n\r\nexport default combineReducers({\r\n\r\n    form: formReducer,\r\n    commentsPage: commentsReducer\r\n\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from \"./utils/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={configureStore()}>\r\n            <App/>\r\n        </Provider>\r\n    </Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {createStore} from 'redux';\r\n\r\nimport combineReducers from '../reducers/combineReducers.js';\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        combineReducers,\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Header_wrap__1sQdS\",\"itemRight\":\"Header_itemRight__1mB96\",\"container\":\"Header_container__3GM0Q\",\"itemStat\":\"Header_itemStat__2nll0\",\"itemWrap\":\"Header_itemWrap__2n41-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Footer_wrap__35emh\",\"wrapList\":\"Footer_wrapList__2uPzn\",\"title\":\"Footer_title__1-Dmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"CommentsList_header__2eRUj\",\"wrapper\":\"CommentsList_wrapper__1aoJZ\",\"wrapperNew\":\"CommentsList_wrapperNew__2whiE\",\"statePositive\":\"CommentsList_statePositive__2fGMp\",\"stateNegative\":\"CommentsList_stateNegative__2YUC6\",\"wrapBlock\":\"CommentsList_wrapBlock__2Ojdx\",\"container\":\"CommentsList_container__1EKVs\",\"itemName\":\"CommentsList_itemName__1WEBT\",\"itemTime\":\"CommentsList_itemTime__3EZ8p\",\"body\":\"CommentsList_body__1EZdM\",\"btnWrap\":\"CommentsList_btnWrap__vH4-p\",\"btnEdit\":\"CommentsList_btnEdit__35Lp3\",\"btnDelete\":\"CommentsList_btnDelete__3NwUu\",\"containerNew\":\"CommentsList_containerNew__2vHPH\"};"],"sourceRoot":""}